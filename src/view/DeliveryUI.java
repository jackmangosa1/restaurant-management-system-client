/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view;
import Service.*;
import java.awt.Font;
import model.*;
import java.rmi.registry.LocateRegistry;
import java.rmi.registry.Registry;
import java.time.LocalDate;
import java.time.ZoneId;
import java.util.List;
import javax.swing.BorderFactory;
import javax.swing.BoxLayout;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author pc
 */
public class DeliveryUI extends javax.swing.JFrame {

    /**
     * Creates new form DeliveryUI
     */
    public DeliveryUI() {
        initComponents();
        addDataToTable();
        setupTableListener();
        populateComboBox();
        setExtendedState(MAXIMIZED_BOTH);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        orderStatusList = new javax.swing.JComboBox<>();
        updateOrderStatusButton = new javax.swing.JButton();
        jLabel10 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        orderTable = new javax.swing.JTable();
        MenuToHome = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel2.setBackground(new java.awt.Color(245, 71, 73));

        jLabel3.setFont(new java.awt.Font("Century Gothic", 1, 24)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("ORDER INFORMATION");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel3)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(jLabel3)
                .addGap(0, 9, Short.MAX_VALUE))
        );

        jLabel9.setFont(new java.awt.Font("Century Gothic", 1, 14)); // NOI18N
        jLabel9.setText("Order Status");

        orderStatusList.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        orderStatusList.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                orderStatusListActionPerformed(evt);
            }
        });

        updateOrderStatusButton.setBackground(new java.awt.Color(245, 71, 72));
        updateOrderStatusButton.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        updateOrderStatusButton.setForeground(new java.awt.Color(255, 255, 255));
        updateOrderStatusButton.setText("Update Status");
        updateOrderStatusButton.setBorder(null);
        updateOrderStatusButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateOrderStatusButtonActionPerformed(evt);
            }
        });

        jLabel10.setFont(new java.awt.Font("Century Gothic", 1, 14)); // NOI18N
        jLabel10.setText("Order List");

        orderTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Order ID", "Order date", "Total Amount", "Order Status"
            }
        ));
        jScrollPane1.setViewportView(orderTable);

        MenuToHome.setFont(new java.awt.Font("Century Gothic", 1, 14)); // NOI18N
        MenuToHome.setText("Go Back to Home");
        MenuToHome.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                MenuToHomeMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(373, 373, 373)
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(41, 41, 41)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel9)
                            .addComponent(orderStatusList, javax.swing.GroupLayout.PREFERRED_SIZE, 571, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(updateOrderStatusButton, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(49, 49, 49)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel10)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 571, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(429, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(MenuToHome)
                .addGap(44, 44, 44))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(68, 68, 68)
                .addComponent(jLabel9)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(orderStatusList, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(26, 26, 26)
                .addComponent(updateOrderStatusButton, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(46, 46, 46)
                .addComponent(jLabel10)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 119, Short.MAX_VALUE)
                .addComponent(MenuToHome)
                .addGap(31, 31, 31))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    int SelectedRowIndex = -1;
    int orderId;
   
   private void setupTableListener(){
      orderTable.getSelectionModel().addListSelectionListener(new ListSelectionListener() {
        @Override
        public void valueChanged(ListSelectionEvent e) {
            if (!e.getValueIsAdjusting()) {
                JTable source = orderTable;
                SelectedRowIndex = source.getSelectedRow();

                if (SelectedRowIndex >= 0) {
                    orderId = Integer.parseInt(source.getValueAt(SelectedRowIndex, 0).toString());
                }
            }
        }
    });
    }   
   private  void populateComboBox(){
          try {
        Registry theRegistry = LocateRegistry.getRegistry("127.0.0.1", 6000);
        OrderStatusService service = (OrderStatusService) theRegistry.lookup("orderStatus");
        List<String> orderStatusesNames = service.allOrderStatusNames();
        orderStatusesNames.add(0, "Select a status");

        orderStatusList.setModel(new DefaultComboBoxModel<>(orderStatusesNames.toArray(new String[0])));
    } catch (Exception ex) {
        ex.printStackTrace();
    }
    }
    private void addDataToTable(){
        try {
        Registry theRegistry = LocateRegistry.getRegistry("127.0.0.1", 6000);
        CustomerOrderService customerOrderService = (CustomerOrderService) theRegistry.lookup("order");
        List<CustomerOrder> customerOrderList = customerOrderService.allCustomerOrders();
        DefaultTableModel source = (DefaultTableModel) orderTable.getModel();
        source.setRowCount(0);

        if (customerOrderList != null) {
            LocalDate currentDate = LocalDate.now();

            for (CustomerOrder item : customerOrderList) {
                LocalDate orderLocalDate = item.getOrderDate().toInstant().atZone(ZoneId.systemDefault()).toLocalDate();

                if (orderLocalDate.equals(currentDate)) {
                    source.addRow(new Object[]{
                            item.getOrderId(),
                            item.getOrderDate(),
                            item.getTotalAmount(),
                            item.getStatus().getStatusName(),
                    });
                }
            }
        } else {
            JOptionPane.showMessageDialog(this, "No record in the database");
        }

    } catch (Exception ex) {
        ex.printStackTrace();
    }
    }
    private void orderStatusListActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_orderStatusListActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_orderStatusListActionPerformed

    private void updateOrderStatusButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateOrderStatusButtonActionPerformed

        if (SelectedRowIndex < 0) {
            JOptionPane.showMessageDialog(this, "Please select a row first!", "Input Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

        try {
            // Get the services from the registry
            Registry theRegistry = LocateRegistry.getRegistry("127.0.0.1", 6000);
            CustomerOrderService customerOrderService = (CustomerOrderService) theRegistry.lookup("order");
            OrderStatusService orderStatusService = (OrderStatusService) theRegistry.lookup("orderStatus");

            // Get the selected order
            CustomerOrder customerOrder = new CustomerOrder();
            customerOrder.setOrderId(orderId);
            CustomerOrder searchedOrder = customerOrderService.searchCustomerOrder(customerOrder);

            if (searchedOrder == null) {
                JOptionPane.showMessageDialog(this, "Order not found", "Error", JOptionPane.ERROR_MESSAGE);
                return;
            }

            // Get the selected order status
            OrderStatus selectedOrderStatusObj = searchedOrder.getStatus();
            String selectedOrderStatusName = orderStatusList.getSelectedItem().toString();

            // Check if the selectedOrderStatusName is valid
            if ("Select a status".equals(selectedOrderStatusName)) {
                JOptionPane.showMessageDialog(this, "Please select a valid status", "Error", JOptionPane.ERROR_MESSAGE);
                return;
            }

            // Get the OrderStatus ID by name
            Integer selectedOrderStatusId = orderStatusService.getOrderStatusIdByName(selectedOrderStatusName);

            // Check if the ID is valid
            if (selectedOrderStatusId == null) {
                JOptionPane.showMessageDialog(this, "Invalid status ID", "Error", JOptionPane.ERROR_MESSAGE);
                return;
            }

            // Set the new status ID
            selectedOrderStatusObj.setStatusId(selectedOrderStatusId);

            // Update the order status
            CustomerOrder updatedOrder = customerOrderService.updateCustomerOrder(searchedOrder);

            if (updatedOrder != null) {
                JOptionPane.showMessageDialog(this, "Status updated");
                addDataToTable();
            } else {
                JOptionPane.showMessageDialog(this, "Status not updated", "Error", JOptionPane.ERROR_MESSAGE);
            }
        } catch (Exception ex) {
            ex.printStackTrace();
        }
    }//GEN-LAST:event_updateOrderStatusButtonActionPerformed

    private void MenuToHomeMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_MenuToHomeMouseClicked
        this.setVisible(false);
        CashierUI cashierUI = new CashierUI();
        cashierUI.setVisible(true);
    }//GEN-LAST:event_MenuToHomeMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(DeliveryUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(DeliveryUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(DeliveryUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(DeliveryUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new DeliveryUI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel MenuToHome;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JComboBox<String> orderStatusList;
    private javax.swing.JTable orderTable;
    private javax.swing.JButton updateOrderStatusButton;
    // End of variables declaration//GEN-END:variables
}
